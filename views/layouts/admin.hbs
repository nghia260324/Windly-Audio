<!DOCTYPE html>
<html>

<head>
    <title>Windly - {{title}}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css"
        integrity="sha256-9kPW/n5nn53j4WMRYAxe9c1rCY96Oogo/MKSVdKzPmI=" crossorigin="anonymous" />

    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">

    <!-- Custom Styles -->
    <link rel="stylesheet" href="/stylesheets/fonts.css" />
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <link rel="stylesheet" href="/stylesheets/admin.style.css" />

    <link rel="stylesheet" href="/stylesheets/{{active}}.style.css" />

</head>

<body>
    <!-- Modal toast -->
    {{> admin/toast.modal}}

    <!-- Modal Loading -->
    {{> admin/loading.modal}}

    <!-- Confirm Modal -->
    {{> admin/confirm.modal}}

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/javascripts/utils.js"></script>

    <script>
        (() => {
            const toastElement = document.getElementById('globalToast');
            const toastTitleElement = document.getElementById('globalToastTitle');
            const toastTimeElement = document.getElementById('globalToastTime');
            const toastBodyElement = document.getElementById('globalToastBody');
            const toastInstance = bootstrap.Toast.getOrCreateInstance(toastElement);

            function getCurrentTimeString() {
                const now = new Date();
                const h = now.getHours().toString().padStart(2, '0');
                const m = now.getMinutes().toString().padStart(2, '0');
                return `${h}:${m}`;
            }

            window.showToast = function (title, message, type = 'info') {
                toastTitleElement.textContent = title;
                toastBodyElement.textContent = message;
                toastTimeElement.textContent = getCurrentTimeString();

                toastElement.classList.remove('text-bg-success', 'text-bg-danger', 'text-bg-info', 'text-bg-warning');

                switch (type) {
                    case 'success':
                        toastElement.classList.add('text-bg-success');
                        break;
                    case 'error':
                        toastElement.classList.add('text-bg-danger');
                        break;
                    case 'warning':
                        toastElement.classList.add('text-bg-warning');
                        break;
                    case 'info':
                    default:
                        toastElement.classList.add('text-bg-info');
                        break;
                }

                toastInstance.show();
            };
            window.showLoading = function (message = 'Đang xử lý...') {
                const overlay = document.getElementById('loadingOverlay');
                const msg = document.getElementById('loadingMessage');
                msg.textContent = message;
                overlay.style.display = 'flex';
            };

            window.hideLoading = function () {
                const overlay = document.getElementById('loadingOverlay');
                overlay.style.display = 'none';
            };
            window.handleApiError = function (result, modalElement) {
                showToast('Lỗi', result.message, 'error');

                if (result.code && typeof result.code === 'string') {
                    const field = result.code.split('_')[0]?.toLowerCase();
                    if (field) {
                        modalElement.querySelector(`.error-${field}`)?.setError(result.message);
                    }
                }
            };
            window.showConfirm = function (message = 'Bạn có chắc chắn?', okText = 'Xác nhận', cancelText = 'Huỷ') {
                return new Promise((resolve) => {
                    const confirmModal = new bootstrap.Modal(document.getElementById('confirmModal'));
                    const body = document.getElementById('confirmModalBody');
                    const okBtn = document.getElementById('confirmOkBtn');
                    const cancelBtn = document.getElementById('confirmCancelBtn');

                    body.textContent = message;
                    okBtn.textContent = okText;
                    cancelBtn.textContent = cancelText;

                    // Clear previous listeners
                    const newOkBtn = okBtn.cloneNode(true);
                    const newCancelBtn = cancelBtn.cloneNode(true);
                    okBtn.parentNode.replaceChild(newOkBtn, okBtn);
                    cancelBtn.parentNode.replaceChild(newCancelBtn, cancelBtn);

                    newOkBtn.addEventListener('click', () => {
                        confirmModal.hide();
                        resolve(true);
                    });

                    newCancelBtn.addEventListener('click', () => {
                        confirmModal.hide();
                        resolve(false);
                    });

                    confirmModal.show();
                });
            };

        })();
    </script>

    <div class="admin-layout">
        {{> admin/sidebar }}

        <div class="main-content">
            <div class="main-content-header d-flex align-items-center justify-content-between">
                <div class="d-flex align-items-center gap-3">
                    {{#if showBack}}
                    <a href="{{backUrl}}" class="btn btn-sm btn-danger text-white">
                        <i class="bi bi-arrow-return-left"></i>
                    </a>
                    {{/if}}
                    <h5 class="mb-0">{{title}}</h5>
                </div>
                <div class="main-content-header-notification d-block">
                    <i class="bi bi-bell-fill"></i>
                </div>
            </div>
            <div class="main-content-body p-3">
                {{{body}}}
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const savedToast = sessionStorage.getItem('toast');
            if (savedToast) {
                const toast = JSON.parse(savedToast);
                showToast(toast.title, toast.message, toast.type);
                sessionStorage.removeItem('toast');
            }
        });
    </script>
</body>

</html>